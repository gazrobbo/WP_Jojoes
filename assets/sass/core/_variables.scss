/*--------------------------------------------------------------
# CSS Variables. Change these to match your theme
--------------------------------------------------------------*/
:root {
	//Fonts. change to the fonts you want. Defaults to OS Fonts
	--font: -apple-system, BlinkMacSystemFont, "Montserrat", Montserrat, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
	--font-alt: -apple-system, BlinkMacSystemFont, "Montserrat", Montserrat, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
	--line-height: 1.5;
	--font-pre: 'Source Code Pro', monospace;
	--line-height-pre: 22px;
	--article-font-size: 1.7rem; //slightly larger text for articles and actual content


	//Colors. Add colors here
	--black: #191919;
	--dark-grey: #4c545d;
	--grey: #cacaca;
	--blue: #00b9eb;
	--dark-blue: #119fcc;


	--main-color: #356EAD;
	--main-color-mid: #5A98D0;
	;
	--main-color-light: #F3F9FF;
	--main-grey: rgb(7, 14, 22);


	//Applied Colors. Add your own applied areas
	--body-bg: white; //found in page.scss
	--main-text-color: var(--black); //used in various files
	--subtle-text-color: var(--grey); //used in forms.scss and page.scss
	--site-top: var(--blue);
	--footer-bg: var(--dark-grey); //found in page.scss
	--header-bg: var(--dark-grey); //found in page.scss

	//links and form buttons. used in typography.scss and forms.scss
	--highlight: var(--blue);
	--highlight-alpha: var(--blue);
	--highlight-darkened: var(--dark-blue);

	--shadow-1:
		3px 3px 10px rgba(0, 0, 0, .02),
		0 1px 1px rgba(0, 0, 0, 0.02),
		0 2px 2px rgba(0, 0, 0, 0.02),
		0 4px 4px rgba(0, 0, 0, 0.02),
		0 8px 8px rgba(0, 0, 0, 0.02),
		0 16px 16px rgba(0, 0, 0, 0.02);


	--shadow-2:
		3px 3px 10px rgba(0, 0, 0, .04),
		0 1px 1px rgba(0, 0, 0, 0.04),
		0 2px 2px rgba(0, 0, 0, 0.04),
		0 4px 4px rgba(0, 0, 0, 0.04),
		0 8px 8px rgba(0, 0, 0, 0.04),
		0 16px 16px rgba(0, 0, 0, 0.04);

	--shadow-3:
		3px 3px 10px rgba(0, 0, 0, .06),
		0 1px 1px rgba(0, 0, 0, 0.06),
		0 2px 2px rgba(0, 0, 0, 0.06),
		0 4px 4px rgba(0, 0, 0, 0.06),
		0 8px 8px rgba(0, 0, 0, 0.06),
		0 16px 16px rgba(0, 0, 0, 0.06);


	--shadow-4:
		3px 3px 10px rgba(0, 0, 0, .08),
		0 1px 1px rgba(0, 0, 0, 0.08),
		0 2px 2px rgba(0, 0, 0, 0.08),
		0 4px 4px rgba(0, 0, 0, 0.08),
		0 8px 8px rgba(0, 0, 0, 0.08),
		0 16px 16px rgba(0, 0, 0, 0.08);

	--shadow-5:
		3px 3px 10px rgba(0, 0, 0, .010),
		0 1px 1px rgba(0, 0, 0, 0.10),
		0 2px 2px rgba(0, 0, 0, 0.10),
		0 4px 4px rgba(0, 0, 0, 0.10),
		0 8px 8px rgba(0, 0, 0, 0.10),
		0 16px 16px rgba(0, 0, 0, 0.10);


	--shadow-6:
		3px 3px 10px rgba(0, 0, 0, .012),
		0 1px 1px rgba(0, 0, 0, 0.12),
		0 2px 2px rgba(0, 0, 0, 0.12),
		0 4px 4px rgba(0, 0, 0, 0.12),
		0 8px 8px rgba(0, 0, 0, 0.12),
		0 16px 16px rgba(0, 0, 0, 0.12);

	--shadow-7:
		3px 3px 10px rgba(0, 0, 0, .014),
		0 1px 1px rgba(0, 0, 0, 0.14),
		0 2px 2px rgba(0, 0, 0, 0.14),
		0 4px 4px rgba(0, 0, 0, 0.14),
		0 8px 8px rgba(0, 0, 0, 0.14),
		0 16px 16px rgba(0, 0, 0, 0.14);


	--shadow-8:
		3px 3px 10px rgba(0, 0, 0, .016),
		0 1px 1px rgba(0, 0, 0, 0.16),
		0 2px 2px rgba(0, 0, 0, 0.16),
		0 4px 4px rgba(0, 0, 0, 0.16),
		0 8px 8px rgba(0, 0, 0, 0.16),
		0 16px 16px rgba(0, 0, 0, 0.16);

}


/*--------------------------------------------------------------
# Layout CSS Variables. Probably don't need to touch.
--------------------------------------------------------------*/
:root {

	/*------- Menu Variables --------*/
	--nav-move: 800px; //should match $media-nav below. when main menu in site-top should move into panel left. Used by data-moveat event
	--desktop-menu-alignment: center; //can be flex-end or flex-start or center for top level menu-items positioning on desktop

	/*------- Layout --------*/
	--container: 1200px; //holds site in a centered container of this size
	--container-content: 70rem; //holds article text for nice reading
	--container-padding: 30px; //used on left and right side of containers

	--gutters: 15px; //common padding size, used on flexbox and modules
	--gap: 30px; //common gap size used for margins and grids
	--grid-gap: 30px; //same as gap but can be changes in instances where the grid needs a smaller gap. used with .grid or .flex-grid
	--flex-gap: calc(var(--grid-gap) / 2);

	/*------- Panels --------*/
	--panel-left-width: 300px; //width of panel-left when open
	--panel-right-width: 350px; //width of panel-right when open

	/*------- Z-index --------*/
	//these probably should not be changed.
	--z-index-top: 99;
	--z-index-overlay: 95;
	--z-index-menu-button: 90;
	--z-index-menu: 80;
	--z-index-header: 75;
	--z-index-behind: -1;
}

/*--------------------------------------------------------------
# Wide Screen Changes
--------------------------------------------------------------*/
@media(min-width: 1600px) {
	:root {
		//Large wide screens are set to have bigger text and a wider container. Feel free to remove this
		font-size: calc(62.5% + 1px); //anything using rem goes up around 2 to 3 pixels
		--container: 1400px;
	}
}

@media screen and (min-width: 1600px) and (-ms-high-contrast: active),
(min-width: 1600px) and (-ms-high-contrast: none) {
	:root {
		font-size: 63%; //ie cant do calc on font-size properly. This is the best we can do
	}
}


/*--------------------------------------------------------------
# SASS Variables
--------------------------------------------------------------*/
//css vars cannot be used in media queries. Sass is still used for media query variables
//Add your own query variables below

/*------- Media Query Sizes. Add your own --------*/
$media-nav: 800px; //when navigations should go mobile. Should prob match --nav-move
$media-small: 576px;
$media-medium: 768px;
$media-large: 1030px;
$media-container: 1200px; //match the container css variable


$gap: 30px; //still used in some queries and instances
$collapse-on-small: true; //collapse grid and flex-grid and flex on small devices automatically. small-span can override

/*------- Panel Becomes Absolute Query  --------*/
$panel-left-absolute: 500px; //when panel-left should become absolute instead of pushing main content over
$panel-right-absolute: 1030px;


/*------- Add your own breakpoints to the grid --------*/
//When using the grid you have the ability to makes spans at that breakpoint.
//ie: medium-span-4 will span 4 at the $media-medium size
//add your own to the list below to have your own span classes available!
//you will need a name to use in the class and you need to create a media variable set to a pixel size
$media-list: ('container': $media-container, 'medium': $media-medium, 'small': $media-small, 'large': $media-large);
